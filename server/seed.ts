import { db } from './db';
import { projects, tasks, projectMembers, documents } from '@shared/schema';
import path from 'path';
import fs from 'fs';

// Function to seed the database with initial data
export async function seedDatabase() {
  console.log('üå± Seeding database with initial data...');
  
  try {
    // Check if data already exists
    const existingProjects = await db.select().from(projects);
    
    // Skip if data already exists
    if (existingProjects.length > 0) {
      console.log('Data already exists in the database. Skipping seeding.');
      return;
    }

    // Insert website project directly
    const [websiteProject] = await db.insert(projects).values({
      name: 'Thi·∫øt k·∫ø l·∫°i website',
      description: 'Thi·∫øt k·∫ø l·∫°i trang web c√¥ng ty v·ªõi giao di·ªán hi·ªán ƒë·∫°i v√† UX ƒë∆∞·ª£c c·∫£i thi·ªán',
      startDate: new Date('2025-05-01'),
      endDate: new Date('2025-07-30'),
    }).returning();

    // Insert marketing project directly
    const [marketingProject] = await db.insert(projects).values({
      name: 'Chi·∫øn d·ªãch Marketing Q3',
      description: 'L·∫≠p k·∫ø ho·∫°ch v√† th·ª±c hi·ªán chi·∫øn d·ªãch marketing cho vi·ªác ra m·∫Øt s·∫£n ph·∫©m Q3',
      startDate: new Date('2025-06-01'),
      endDate: new Date('2025-09-30'),
    }).returning();

    // Add the user as project member
    await db.insert(projectMembers).values([
      {
        projectId: websiteProject.id,
        userId: '42565088',
        role: 'owner',
      },
      {
        projectId: marketingProject.id,
        userId: '42565088',
        role: 'owner',
      }
    ]);

    // Insert website tasks
    await db.insert(tasks).values([
      {
        title: 'Thi·∫øt k·∫ø mockup',
        description: 'T·∫°o wireframes v√† mockups thi·∫øt k·∫ø cho trang ch·ªß v√† trang s·∫£n ph·∫©m',
        projectId: websiteProject.id,
        status: 'in_progress',
        priority: 'high',
        order: 1,
        dueDate: new Date('2025-05-15'),
        assigneeId: '42565088',
        creatorId: '42565088',
      },
      {
        title: 'X√¢y d·ª±ng frontend',
        description: 'Tri·ªÉn khai c√°c th√†nh ph·∫ßn frontend s·ª≠ d·ª•ng React v√† Tailwind CSS',
        projectId: websiteProject.id,
        status: 'todo',
        priority: 'medium',
        order: 1,
        dueDate: new Date('2025-06-01'),
        assigneeId: '42565088',
        creatorId: '42565088',
      },
      {
        title: 'Ph√°t tri·ªÉn API backend',
        description: 'T·∫°o REST API cho danh m·ª•c s·∫£n ph·∫©m v√† qu·∫£n l√Ω ng∆∞·ªùi d√πng',
        projectId: websiteProject.id,
        status: 'todo',
        priority: 'high',
        order: 2,
        dueDate: new Date('2025-06-15'),
        assigneeId: '42565088',
        creatorId: '42565088',
      },
      {
        title: 'Ki·ªÉm th·ª≠ ng∆∞·ªùi d√πng',
        description: 'Ti·∫øn h√†nh c√°c phi√™n ki·ªÉm th·ª≠ ng∆∞·ªùi d√πng ƒë·ªÉ thu th·∫≠p ph·∫£n h·ªìi v·ªÅ t√≠nh kh·∫£ d·ª•ng',
        projectId: websiteProject.id,
        status: 'backlog',
        priority: 'medium',
        order: 1,
        dueDate: new Date('2025-07-01'),
        creatorId: '42565088',
      },
      {
        title: 'Di chuy·ªÉn n·ªôi dung',
        description: 'Di chuy·ªÉn n·ªôi dung hi·ªán c√≥ sang c·∫•u tr√∫c trang web m·ªõi',
        projectId: websiteProject.id,
        status: 'backlog',
        priority: 'low',
        order: 2,
        dueDate: new Date('2025-07-15'),
        creatorId: '42565088',
      }
    ]);

    // Insert marketing tasks
    await db.insert(tasks).values([
      {
        title: 'Nghi√™n c·ª©u th·ªã tr∆∞·ªùng',
        description: 'Ph√¢n t√≠ch nh√¢n kh·∫©u h·ªçc m·ª•c ti√™u v√† chi·∫øn l∆∞·ª£c c·ªßa ƒë·ªëi th·ªß c·∫°nh tranh',
        projectId: marketingProject.id,
        status: 'in_progress',
        priority: 'high',
        order: 1,
        dueDate: new Date('2025-06-15'),
        assigneeId: '42565088',
        creatorId: '42565088',
      },
      {
        title: 'T·∫°o n·ªôi dung',
        description: 'T·∫°o b√†i ƒëƒÉng blog, n·ªôi dung m·∫°ng x√£ h·ªôi v√† chi·∫øn d·ªãch email',
        projectId: marketingProject.id,
        status: 'todo',
        priority: 'medium',
        order: 1,
        dueDate: new Date('2025-07-15'),
        assigneeId: '42565088',
        creatorId: '42565088',
      },
      {
        title: 'L√™n l·ªãch m·∫°ng x√£ h·ªôi',
        description: 'L√™n l·ªãch v√† k·∫ø ho·∫°ch c√°c b√†i ƒëƒÉng tr√™n m·∫°ng x√£ h·ªôi tr√™n c√°c n·ªÅn t·∫£ng',
        projectId: marketingProject.id,
        status: 'todo',
        priority: 'medium',
        order: 2,
        dueDate: new Date('2025-08-01'),
        creatorId: '42565088',
      }
    ]);
    
    // Create sample documents
    const uploadDir = path.join(process.cwd(), 'uploads');
    if (!fs.existsSync(uploadDir)) {
      fs.mkdirSync(uploadDir, { recursive: true });
    }
    
    // Create placeholder files
    const createPlaceholderFile = (filename: string, content: string) => {
      const filePath = path.join(uploadDir, filename);
      fs.writeFileSync(filePath, content);
      return `/uploads/${filename}`;
    };
    
    // Insert documents
    await db.insert(documents).values([
      {
        name: 'H∆∞·ªõng d·∫´n thi·∫øt k·∫ø website',
        description: 'H∆∞·ªõng d·∫´n th∆∞∆°ng hi·ªáu v√† ti√™u chu·∫©n thi·∫øt k·∫ø cho d·ª± √°n website',
        projectId: websiteProject.id,
        category: 'design',
        fileUrl: createPlaceholderFile('website-guidelines.txt', 'ƒê√¢y l√† tr√¨nh gi·ªØ ch·ªó cho h∆∞·ªõng d·∫´n thi·∫øt k·∫ø'),
        fileType: 'text/plain',
        fileSize: 256,
        uploaderId: '42565088',
        version: 1,
      },
      {
        name: 'L·ªãch tr√¨nh d·ª± √°n',
        description: 'L·ªãch tr√¨nh chi ti·∫øt v·ªõi c√°c m·ªëc quan tr·ªçng cho vi·ªác thi·∫øt k·∫ø l·∫°i trang web',
        projectId: websiteProject.id,
        category: 'specification',
        fileUrl: createPlaceholderFile('project-timeline.txt', 'ƒê√¢y l√† tr√¨nh gi·ªØ ch·ªó cho l·ªãch tr√¨nh d·ª± √°n'),
        fileType: 'text/plain',
        fileSize: 128,
        uploaderId: '42565088',
        version: 1,
      },
      {
        name: 'Chi·∫øn l∆∞·ª£c Marketing',
        description: 'Chi·∫øn l∆∞·ª£c marketing Q3 v√† chi ti·∫øt chi·∫øn d·ªãch',
        projectId: marketingProject.id,
        category: 'report',
        fileUrl: createPlaceholderFile('marketing-strategy.txt', 'ƒê√¢y l√† tr√¨nh gi·ªØ ch·ªó cho chi·∫øn l∆∞·ª£c marketing'),
        fileType: 'text/plain',
        fileSize: 328,
        uploaderId: '42565088',
        version: 1,
      }
    ]);

    console.log('‚úÖ Database seeded successfully!');
  } catch (error) {
    console.error('Error seeding database:', error);
    throw error;
  }
}